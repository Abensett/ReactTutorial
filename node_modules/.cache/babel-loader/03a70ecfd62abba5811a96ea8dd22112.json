{"ast":null,"code":"import _objectSpread from \"/Users/abou/Desktop/Computering/ReactJS/ReactTutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/abou/Desktop/Computering/ReactJS/ReactTutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/abou/Desktop/Computering/ReactJS/ReactTutorial/src/Ball.jsx\";\nimport React from 'react';\n\n// useState = valeur de l'état \n// useEffect = lifecycle management \n// useRef = reference to a DOM element (DOM element is a HTML element D = Document O = Object M = Model)\nimport { useState, useEffect, useRef } from \"react\";\n\n// offsetWidth and offsetHeight are the width and height of the element including padding and border\n// useRef is used to get the reference of the parent element (Board) and then we can get the width and height of the parent element\n// useEffect is used to update the state of the ball position\n// setInterval is used to update the state of the ball position every 10 ms\nexport var Ball = function Ball(props) {\n  var _useState = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    Position = _useState2[0],\n    setPosition = _useState2[1];\n  var _useState3 = useState({\n      x: 5,\n      y: 5\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Speed = _useState4[0],\n    setSpeed = _useState4[1];\n  var _useState5 = useState(45),\n    _useState6 = _slicedToArray(_useState5, 2),\n    angle = _useState6[0],\n    setAngle = _useState6[1];\n  var parentRef = useRef(null);\n  useEffect(function () {\n    var parent = parentRef.current;\n    var width = parent.offsetWidth;\n    var height = parent.offsetHeight;\n    var intervalId = setInterval(function () {\n      setPosition(function (prevPos) {\n        var newX = prevPos.x + Speed.x * Math.cos(angle * Math.PI / 180);\n        var newY = prevPos.y + Speed.y * Math.sin(angle * Math.PI / 180);\n        if (newX < 0 || newX + 20 > width) {\n          newX = prevPos.x;\n          setSpeed(function (prevSpeed) {\n            return _objectSpread({}, prevSpeed, {\n              x: -prevSpeed.x\n            });\n          });\n          setAngle(180 - angle);\n        }\n        if (newY < 0 || newY + 20 > height) {\n          newY = prevPos.y;\n          setSpeed(function (prevSpeed) {\n            return _objectSpread({}, prevSpeed, {\n              y: -prevSpeed.y\n            });\n          });\n          if (newY < 0) setAngle(-angle);else setAngle(360 - angle);\n        }\n        return {\n          x: newX,\n          y: newY\n        };\n      });\n    }, 13);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: parentRef,\n    className: \"Board\",\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Ball\",\n    style: {\n      left: \"\".concat(Position.x, \"%\"),\n      top: \"\".concat(Position.y, \"px\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"names":["React","useState","useEffect","useRef","Ball","props","x","y","Position","setPosition","Speed","setSpeed","angle","setAngle","parentRef","parent","current","width","offsetWidth","height","offsetHeight","intervalId","setInterval","prevPos","newX","Math","cos","PI","newY","sin","prevSpeed","clearInterval","left","top"],"sources":["/Users/abou/Desktop/Computering/ReactJS/ReactTutorial/src/Ball.jsx"],"sourcesContent":["import React from 'react'; \n\n\n// useState = valeur de l'état \n// useEffect = lifecycle management \n// useRef = reference to a DOM element (DOM element is a HTML element D = Document O = Object M = Model)\nimport { useState, useEffect, useRef } from \"react\";\n\n\n\n// offsetWidth and offsetHeight are the width and height of the element including padding and border\n// useRef is used to get the reference of the parent element (Board) and then we can get the width and height of the parent element\n// useEffect is used to update the state of the ball position\n// setInterval is used to update the state of the ball position every 10 ms\nexport const Ball = (props) => {\n    const [Position, setPosition] = useState({ x: 0, y: 0 });\n    const [Speed, setSpeed] = useState({ x: 5, y: 5 });\n    const [angle, setAngle] = useState(45);\n    const parentRef = useRef(null);\n  \n    useEffect(() => {\n      const parent = parentRef.current;\n      const width = parent.offsetWidth;\n      const height = parent.offsetHeight;\n  \n      const intervalId = setInterval(() => {\n        setPosition(prevPos => {\n          let newX = prevPos.x + Speed.x * Math.cos((angle * Math.PI) / 180);\n          let newY = prevPos.y + Speed.y * Math.sin((angle * Math.PI) / 180);\n  \n          if (newX < 0 || newX + 20 > width) {\n            newX = prevPos.x;\n            setSpeed(prevSpeed => ({ ...prevSpeed, x: -prevSpeed.x }));\n            setAngle(180 - angle);\n          }\n          if (newY < 0 || newY + 20 > height) {\n            newY = prevPos.y;\n            setSpeed(prevSpeed => ({ ...prevSpeed, y: -prevSpeed.y }));\n            if (newY < 0)\n               setAngle(- angle);\n            else\n               setAngle(360 - angle);\n          }\n          return { x: newX, y: newY };\n        });\n      }, 13);\n      return () => clearInterval(intervalId);\n    }, []);\n  \n    return (\n      <div\n        ref={parentRef}\n        className=\"Board\"\n        style={{\n          width: '100%',\n          height: '100%'\n        }}\n      >\n        <div\n          className=\"Ball\"\n          style={{\n            left: `${Position.x}%`,\n            top: `${Position.y}px`\n          }}\n        />\n      </div>\n    );\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}