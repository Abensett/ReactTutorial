{"ast":null,"code":"var _jsxFileName = \"/Users/abou/Desktop/Computering/ReactJS/pong/src/index.jsx\";\n/************************************************************************\n * Project: PONG\n * \n * TODO LIST:\n * 1. Create a canvas : Ball, Paddle, Score \n * 2. Implement the game logic : status, position, score \n * 3. Implement the game loop : events = mouse move\n * 4\n ************************************************************************ */\n\n/************************************************************************\n * LEARNING REACTS THANKS TO GRAFIKARTS\n ************************************************************************ */\n\nimport React from 'react'; /* React is JS lib buildon UI interactive apps Web/Mobile*/\nimport ReactDOM from 'react-dom/client'; /* ReactDOM is for web */\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction numberFormat(_ref) {\n  let {\n    number\n  } = _ref;\n  return number < 10 ? `00:0${number}` : number;\n}\n\n// ============================================================================//\n// Timer component :\n//        * Events : setState, setInterval\n//        * constructor : props, super, state, bind\n// ============================================================================//\nclass Timer extends React.Component {\n  constructor(props) {\n    // call the parent constructor\n    super(props);\n    this.state = {\n      timer: props.start,\n      time: null\n    };\n\n    // bind the function to the current context \n    // this is so that the function can be called from the render function\n    this.toggleButton = this.toggleButton.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  //  be called when the component is mounted\n  //  set the interval to 1 second\n  componentDidMount() {\n    this.play();\n  }\n  // called when the component is unmounted\n  // Stop the interval\n  componentWillUnmount() {\n    this.stop();\n  }\n  // called every second and increment the timer\n  tick() {\n    this.setState((state, props) => ({\n      timer: state.timer + props.step\n    }));\n  }\n  // Stop the interval\n  stop() {\n    window.clearInterval(this.state.time);\n    this.setState({\n      time: null\n    });\n  }\n  // Start the interval\n  play() {\n    this.setState({\n      time: window.setInterval(this.tick.bind(this), 1000)\n    });\n  }\n  toggleButton() {\n    return this.state.time ? this.stop() : this.play();\n  }\n  label() {\n    return this.state.time ? 'Stop' : 'Play';\n  }\n  reset() {\n    this.stop();\n    this.play();\n    this.setState({\n      timer: 0\n    });\n  }\n  // render is called every time the state is changed\n  // the state is changed when the increment function is called\n  // binding functions in the construtors improve the performance\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Game : \", this.state.timer, \"   \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleButton,\n        children: this.label()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.reset,\n        children: \"mettre a 0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this);\n  }\n}\n// Default props for the Timer component\nTimer.defaultProps = {\n  start: 0,\n  step: 1\n};\n// Manual props for the Timer component\nclass ManualIncementer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 0\n    };\n  }\n\n  // console.log  show the event object in the console\n  increment(e) {\n    console.log(e);\n    this.setState({\n      timer: this.state.timer + 1\n    });\n  }\n\n  // Bind the function to the current context\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Timer : \", this.state.timer, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment.bind(this),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// ============================================================================//\n// Timer component :\n//        * Formulaires\n//        * constructor : props, super, state, bind\n// ============================================================================//\n\n// ============================================================================//\n// Game component : Main component \n// ============================================================================//\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"First: Timer, Manual Incrementer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ManualIncementer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Second : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nom\",\n          children: \" My name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"texte\",\n          id: \"nom\",\n          value: this.state.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// ============================================================================//\n\n// create a root element\n// React Dom is for web it will render the game component in the root element\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nwindow.setInterval(() => {\n  root.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 39\n  }, this));\n}, 1000);","map":{"version":3,"names":["React","ReactDOM","numberFormat","number","Timer","Component","constructor","props","state","timer","start","time","toggleButton","bind","reset","componentDidMount","play","componentWillUnmount","stop","tick","setState","step","window","clearInterval","setInterval","label","render","defaultProps","ManualIncementer","increment","e","console","log","Game","nom","root","createRoot","document","getElementById"],"sources":["/Users/abou/Desktop/Computering/ReactJS/pong/src/index.jsx"],"sourcesContent":["\n/************************************************************************\n * Project: PONG\n * \n * TODO LIST:\n * 1. Create a canvas : Ball, Paddle, Score \n * 2. Implement the game logic : status, position, score \n * 3. Implement the game loop : events = mouse move\n * 4\n ************************************************************************ */\n\n/************************************************************************\n * LEARNING REACTS THANKS TO GRAFIKARTS\n ************************************************************************ */\n\n\nimport React from 'react'; /* React is JS lib buildon UI interactive apps Web/Mobile*/\nimport ReactDOM from 'react-dom/client'; /* ReactDOM is for web */\nimport './index.css';\n\n\nfunction numberFormat({number}) {\n  return number < 10 ? `00:0${number}` : number;\n}\n\n// ============================================================================//\n// Timer component :\n//        * Events : setState, setInterval\n//        * constructor : props, super, state, bind\n// ============================================================================//\nclass Timer extends  React.Component {\n  constructor(props) {\n    // call the parent constructor\n    super(props)\n    this.state = {timer : props.start, time: null}\n\n    // bind the function to the current context \n    // this is so that the function can be called from the render function\n    this.toggleButton = this.toggleButton.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  //  be called when the component is mounted\n  //  set the interval to 1 second\n  componentDidMount() { \n    this.play()\n  }\n  // called when the component is unmounted\n  // Stop the interval\n  componentWillUnmount(){\n    this.stop()\n  }\n  // called every second and increment the timer\n  tick() {\n    this.setState((state, props) => ({timer: state.timer + props.step}))\n  }\n  // Stop the interval\n  stop() {\n    window.clearInterval(this.state.time)\n    this.setState({time: null})\n  }\n  // Start the interval\n  play() {\n    this.setState({time: window.setInterval(this.tick.bind(this), 1000)})\n  }\n\n\n  toggleButton() {\n    return this.state.time ? this.stop() : this.play()\n  }\n\n  label()\n  {\n    return this.state.time ? 'Stop' : 'Play'\n  }\n\n  reset()\n  {\n    this.stop();\n    this.play();\n    this.setState({timer: 0})\n  }\n  // render is called every time the state is changed\n  // the state is changed when the increment function is called\n  // binding functions in the construtors improve the performance\n  render() \n  {\n\t  return (\n\t  <div >Game : {this.state.timer}   <br/>\n    <button onClick={this.toggleButton}>{this.label()}</button>\n    <button onClick={this.reset}>mettre a 0</button>\n    </div> \n\t)}\n}\n// Default props for the Timer component\nTimer.defaultProps = {\n  start: 0,\n  step: 1\n}\n// Manual props for the Timer component\nclass ManualIncementer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {timer: 0}\n\n  }\n\n  // console.log  show the event object in the console\n  increment(e) {\n    console.log(e)\n    this.setState({timer: this.state.timer + 1})\n  }\n\n  // Bind the function to the current context\n  render(){\n    return (\n      <div>\n        Timer : {this.state.timer} <br></br>\n        <button onClick={this.increment.bind(this)}>Increment</button>\n      </div>\n    )\n  }\n}\n\n// ============================================================================//\n// Timer component :\n//        * Formulaires\n//        * constructor : props, super, state, bind\n// ============================================================================//\n\n\n// ============================================================================//\n// Game component : Main component \n// ============================================================================//\nclass Game extends React.Component {\n\n\t  render() {\n\t\treturn(\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <h1>First: Timer, Manual Incrementer</h1>\n          < Timer />\n         <ManualIncementer />\n         \n         <h1>Second : </h1>\n        <label htmlFor=\"nom\"> My name</label> <br/>\n        <input type=\"texte\" id=\"nom\" value ={this.state.nom}/>\n        </div>\n      </div>    \n    )\n\t  }\n}  \n\n// ============================================================================//\n\n// create a root element\n// React Dom is for web it will render the game component in the root element\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nwindow.setInterval(() => {root.render(<Game />);}, 1000);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}