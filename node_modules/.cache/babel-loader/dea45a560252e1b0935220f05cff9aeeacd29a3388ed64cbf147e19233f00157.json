{"ast":null,"code":"var _jsxFileName = \"/Users/abou/Desktop/Computering/ReactJS/ReactTutorial/src/Ball.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\n\n// useState = valeur de l'état \n// useEffect = lifecycle management \n// useRef = reference to a DOM element (DOM element is a HTML element D = Document O = Object M = Model)\nimport { useState, useEffect, useRef } from \"react\";\n\n// offsetWidth and offsetHeight are the width and height of the element including padding and border\n// useRef is used to get the reference of the parent element (Board) and then we can get the width and height of the parent element\n// useEffect is used to update the state of the ball position\n// setInterval is used to update the state of the ball position every 10 ms\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Ball = props => {\n  _s();\n  const [Position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [Speed, setSpeed] = useState({\n    x: 5,\n    y: 5\n  });\n  const [angle, setAngle] = useState(45);\n  const parentRef = useRef(null);\n  useEffect(() => {\n    const parent = parentRef.current;\n    const width = parent.offsetWidth;\n    const height = parent.offsetHeight;\n    const intervalId = setInterval(() => {\n      setPosition(prevPos => {\n        let newX = prevPos.x + Speed.x * Math.cos(angle * Math.PI / 180);\n        let newY = prevPos.y + Speed.y * Math.sin(angle * Math.PI / 180);\n        if (newX < 0 || newX + 20 > width) {\n          newX = prevPos.x;\n          setSpeed(prevSpeed => ({\n            ...prevSpeed,\n            x: -prevSpeed.x\n          }));\n          setAngle(180 - angle);\n        }\n        if (newY < 0 || newY + 20 > height) {\n          newY = prevPos.y;\n          setSpeed(prevSpeed => ({\n            ...prevSpeed,\n            y: -prevSpeed.y\n          }));\n          if (newY < 0) setAngle(-angle);else setAngle(360 - angle);\n        }\n        return {\n          x: newX,\n          y: newY\n        };\n      });\n    }, 13);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: parentRef,\n    className: \"Board\",\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Ball\",\n      style: {\n        left: `${Position.x}px`,\n        top: `${Position.y}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(Ball, \"Q3KSg/CaCCxWtM2P+7r7lIrDR4g=\");\n_c = Ball;\nvar _c;\n$RefreshReg$(_c, \"Ball\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Ball","props","Position","setPosition","x","y","Speed","setSpeed","angle","setAngle","parentRef","parent","current","width","offsetWidth","height","offsetHeight","intervalId","setInterval","prevPos","newX","Math","cos","PI","newY","sin","prevSpeed","clearInterval","left","top"],"sources":["/Users/abou/Desktop/Computering/ReactJS/ReactTutorial/src/Ball.jsx"],"sourcesContent":["import React from 'react'; \n\n\n// useState = valeur de l'état \n// useEffect = lifecycle management \n// useRef = reference to a DOM element (DOM element is a HTML element D = Document O = Object M = Model)\nimport { useState, useEffect, useRef } from \"react\";\n\n\n\n// offsetWidth and offsetHeight are the width and height of the element including padding and border\n// useRef is used to get the reference of the parent element (Board) and then we can get the width and height of the parent element\n// useEffect is used to update the state of the ball position\n// setInterval is used to update the state of the ball position every 10 ms\nexport const Ball = (props) => {\n    const [Position, setPosition] = useState({ x: 0, y: 0 });\n    const [Speed, setSpeed] = useState({ x: 5, y: 5 });\n    const [angle, setAngle] = useState(45);\n    const parentRef = useRef(null);\n  \n    useEffect(() => {\n      const parent = parentRef.current;\n      const width = parent.offsetWidth;\n      const height = parent.offsetHeight;\n  \n      const intervalId = setInterval(() => {\n        setPosition(prevPos => {\n          let newX = prevPos.x + Speed.x * Math.cos((angle * Math.PI) / 180);\n          let newY = prevPos.y + Speed.y * Math.sin((angle * Math.PI) / 180);\n  \n          if (newX < 0 || newX + 20 > width) {\n            newX = prevPos.x;\n            setSpeed(prevSpeed => ({ ...prevSpeed, x: -prevSpeed.x }));\n            setAngle(180 - angle);\n          }\n          if (newY < 0 || newY + 20 > height) {\n            newY = prevPos.y;\n            setSpeed(prevSpeed => ({ ...prevSpeed, y: -prevSpeed.y }));\n            if (newY < 0)\n               setAngle(- angle);\n            else\n               setAngle(360 - angle);\n          }\n          return { x: newX, y: newY };\n        });\n      }, 13);\n      return () => clearInterval(intervalId);\n    }, []);\n  \n    return (\n      <div\n        ref={parentRef}\n        className=\"Board\"\n        style={{\n          width: '100%',\n          height: '100%'\n        }}\n      >\n        <div\n          className=\"Ball\"\n          style={{\n            left: `${Position.x}px`,\n            top: `${Position.y}px`\n          }}\n        />\n      </div>\n    );\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}